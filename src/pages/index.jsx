import {Avatar, Paper, Stack, Typography} from "@mui/material";
import {Box} from "@mui/system";
import Head from "next/head";
import {useEffect, useLayoutEffect, useState} from "react";
import useSWR from "swr";
import useSWRInfinite from "swr/infinite";
import styles from "../../styles/Home.module.css";

export default function Home() {
  const ENDPOINT = "https:api.github.com/users/mariosouto/followers";
  const fetcher = (...args) => fetch(...args).then((res) => res.json());
  const limit = 5;
  // const [currentPage, setCurrentPage] = useState(0);
  // A function to get the SWR key of each page,
  // its return value will be accepted by `fetcher`.
  // If `null` is returned, the request of that page won't start.
  const getKey = (pageIndex, previousPageData) => {
    if (previousPageData && !previousPageData.length) return null; // reached the end
    return `${ENDPOINT}?per_page=${limit}&page=${pageIndex}`;
  };

  const {data, size, setSize} = useSWRInfinite(getKey, fetcher, {revalidateFirstPage: false, revalidateAll: true});
  
  // Entra dentro de cada page buscada pelo SWR 
  // e preenche o aaray de users com os items da página
  let users = [];
  data?.map((page) => {
    users.push(...page);
  });

  useEffect(() => {
    const observer = new IntersectionObserver((entries) => {
      if (entries[0].intersectionRatio) {
        console.log("Mais uma chamada....");
        setSize((currentSize) => currentSize + 1);
      }
    });
    // Div que o observer ficará monitorando
    observer.observe(document.querySelector("#sentinela"));

    return () => observer.disconnect();
  }, []);


  
  if (users) {
    return (
      <div className={styles.container}>
        <Head>
          <title>Infinity Loading</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>
            Infinity <a href="#">Loading!</a>
          </h1>
          <h3>{size}</h3>

          <Stack spacing={3} sx={{width: "100%"}}>
            {users?.map((user, i) => {
              return (
                <Paper key={i} sx={{px: 2, py: 5}}>
                  <Stack direction="row" spacing={3}>
                    <Avatar sizes="100x100" src={user?.avatar_url} />
                    <Box>
                      <Typography fontWeight={600}>
                        <span>{i} -</span> {user?.login}
                      </Typography>
                      <Typography fontSize={14}>{user?.id}</Typography>
                    </Box>
                  </Stack>
                </Paper>
              );
            })}
          </Stack>
          <button id="sentinela">Load more</button>
        </main>
      </div>
    );
  }
  return null;
}
